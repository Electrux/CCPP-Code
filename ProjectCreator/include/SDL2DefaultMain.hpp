//
// Created by Electrux Redsworth on 9/19/17.
//

#ifndef PROJECTCREATOR_SDL2DEFAULTMAIN_HPP
#define PROJECTCREATOR_SDL2DEFAULTMAIN_HPP

#include <string>

const std::string SDL2DEFAULTMAINCPP = "#include <SDL.h>\n"
	"#include <iostream>\n"
	" \n"
	"int main( int argc, char **argv )\n"
	"{\n"
	"       int posX = 100;\n"
	"       int posY = 200;\n"
	"       int sizeX = 300;\n"
	"       int sizeY = 400;\n"
	"       SDL_Window* window;\n"
	"       SDL_Renderer* renderer;\n"
	"\n"
	"       // Initialize SDL\n"
	"       // ==========================================================\n"
	"       if ( SDL_Init( SDL_INIT_EVERYTHING ) != 0 )\n"
	"       {\n"
	"               // Something failed, print error and exit.\n"
	"               std::cout << \"Failed to initialize SDL : \" << SDL_GetError() << std::endl;\n"
	"               return -1;\n"
	"       }\n"
	"\n"
	"       // Create and init the window\n"
	"       // ==========================================================\n"
	"       window = SDL_CreateWindow( \"Server\", posX, posY, sizeX, sizeY, 0 );\n"
	"\n"
	"       if ( window == nullptr )\n"
	"       {\n"
	"               std::cout << \"Failed to create window : \" << SDL_GetError();\n"
	"               return -1;\n"
	"       }\n"
	"\n"
	"       // Create and init the renderer\n"
	"       // ==========================================================\n"
	"       renderer = SDL_CreateRenderer( window, -1, SDL_RENDERER_ACCELERATED );\n"
	"\n"
	"       if ( renderer == nullptr )\n"
	"       {\n"
	"               std::cout << \"Failed to create renderer : \" << SDL_GetError();\n"
	"               return -1;\n"
	"       }\n"
	"\n"
	"       // Render something\n"
	"       // ==========================================================\n"
	"\n"
	"       // Set size of renderer to the same as window\n"
	"       SDL_RenderSetLogicalSize( renderer, sizeX, sizeY );\n"
	"\n"
	"       // Set color of renderer to red\n"
	"       SDL_SetRenderDrawColor( renderer, 255, 0, 0, 255 );\n"
	"\n"
	"       // Clear the window and make it all red\n"
	"       SDL_RenderClear( renderer );\n"
	"\n"
	"       // Render the changes above ( which up until now had just happened behind the scenes )\n"
	"       // Pause program so that the window doesn't disappear at once.\n"
	"       // This willpause for 4000 milliseconds which is the same as 4 seconds\n"
	"       SDL_Delay( 4000 );\n"
	"\n"
	"       return 0;\n"
	"}";

const std::string SDL2DEFAULTMAINC = "#include <SDL.h>\n"
	"#include <stdio.h>\n"
	" \n"
	"int main( int argc, char **argv )\n"
	"{\n"
	"       int posX = 100;\n"
	"       int posY = 200;\n"
	"       int sizeX = 300;\n"
	"       int sizeY = 400;\n"
	"       SDL_Window* window;\n"
	"       SDL_Renderer* renderer;\n"
	"\n"
	"       // Initialize SDL\n"
	"       // ==========================================================\n"
	"       if ( SDL_Init( SDL_INIT_EVERYTHING ) != 0 )\n"
	"       {\n"
	"               // Something failed, print error and exit.\n"
	"               printf( \"Failed to initialize SDL : %s\n\" ), SDL_GetError() );\n"
	"               return -1;\n"
	"       }\n"
	"\n"
	"       // Create and init the window\n"
	"       // ==========================================================\n"
	"       window = SDL_CreateWindow( \"Server\", posX, posY, sizeX, sizeY, 0 );\n"
	"\n"
	"       if ( window == nullptr )\n"
	"       {\n"
	"               printf( \"Failed to create window : %s\n\" ), SDL_GetError() );\n"
	"               return -1;\n"
	"       }\n"
	"\n"
	"       // Create and init the renderer\n"
	"       // ==========================================================\n"
	"       renderer = SDL_CreateRenderer( window, -1, SDL_RENDERER_ACCELERATED );\n"
	"\n"
	"       if ( renderer == nullptr )\n"
	"       {\n"
	"               printf( \"Failed to create renderer : %s\n\" ), SDL_GetError() );\n"
	"               return -1;\n"
	"       }\n"
	"\n"
	"       // Render something\n"
	"       // ==========================================================\n"
	"\n"
	"       // Set size of renderer to the same as window\n"
	"       SDL_RenderSetLogicalSize( renderer, sizeX, sizeY );\n"
	"\n"
	"       // Set color of renderer to red\n"
	"       SDL_SetRenderDrawColor( renderer, 255, 0, 0, 255 );\n"
	"\n"
	"       // Clear the window and make it all red\n"
	"       SDL_RenderClear( renderer );\n"
	"\n"
	"       // Render the changes above ( which up until now had just happened behind the scenes )\n"
	"       // Pause program so that the window doesn't disappear at once.\n"
	"       // This willpause for 4000 milliseconds which is the same as 4 seconds\n"
	"       SDL_Delay( 4000 );\n"
	"\n"
	"       return 0;\n"
	"}";

static std::map < std::string, std::string > SDL2DEFAULTMAIN = {
	{ "c", SDL2DEFAULTMAINC },
	{ "c++", SDL2DEFAULTMAINCPP }
};

#endif //PROJECTCREATOR_SDL2DEFAULTMAIN_HPP
