//
// Created by Electrux Redsworth on 9/19/17.
//

#ifndef PROJECTCREATOR_FINDSDL2_IMAGE_HPP
#define PROJECTCREATOR_FINDSDL2_IMAGE_HPP

#include <string>

const std::string FINDSDL2_IMAGEFILESTR = "# Locate SDL2_image library\n"
	"# This module defines\n"
	"# SDL2_IMAGE_LIBRARY, the name of the library to link against\n"
	"# SDL2_IMAGE_FOUND, if false, do not try to link to SDL2_image\n"
	"# SDL2_IMAGE_INCLUDE_DIR, where to find SDL_image.h\n"
	"#\n"
	"# Additional Note: If you see an empty SDL2_IMAGE_LIBRARY_TEMP in your configuration\n"
	"# and no SDL2_IMAGE_LIBRARY, it means CMake did not find your SDL2_Image library\n"
	"# (SDL2_image.dll, libsdl2_image.so, SDL2_image.framework, etc).\n"
	"# Set SDL2_IMAGE_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n"
	"# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n"
	"# as appropriate. These values are used to generate the final SDL2_IMAGE_LIBRARY\n"
	"# variable, but when these values are unset, SDL2_IMAGE_LIBRARY does not get created.\n"
	"#\n"
	"# $SDL2 is an environment variable that would\n"
	"# correspond to the ./configure --prefix=$SDL2\n"
	"# used in building SDL2.\n"
	"# l.e.galup 9-20-02\n"
	"#\n"
	"# Modified by Eric Wing.\n"
	"# Added code to assist with automated building by using environmental variables\n"
	"# and providing a more controlled/consistent search behavior.\n"
	"# Added new modifications to recognize OS X frameworks and\n"
	"# additional Unix paths (FreeBSD, etc).\n"
	"# Also corrected the header search path to follow \"proper\" SDL2 guidelines.\n"
	"# Added a search for SDL2main which is needed by some platforms.\n"
	"# Added a search for threads which is needed by some platforms.\n"
	"# Added needed compile switches for MinGW.\n"
	"#\n"
	"# On OSX, this will prefer the Framework version (if found) over others.\n"
	"# People will have to manually change the cache values of\n"
	"# SDL2_IMAGE_LIBRARY to override this selection or set the CMake environment\n"
	"# CMAKE_INCLUDE_PATH to modify the search paths.\n"
	"#\n"
	"# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n"
	"# This needed to change because \"proper\" SDL2 convention\n"
	"# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n"
	"# reasons because not all systems place things in SDL2/ (see FreeBSD).\n"
	"#\n"
	"# Ported by Johnny Patterson. This is a literal port for SDL2 of the FindSDL.cmake\n"
	"# module with the minor edit of changing \"SDL\" to \"SDL2\" where necessary. This\n"
	"# was not created for redistribution, and exists temporarily pending official\n"
	"# SDL2 CMake modules.\n"
	"# \n"
	"# Note that on windows this will only search for the 32bit libraries, to search\n"
	"# for 64bit change x86/i686-w64 to x64/x86_64-w64\n"
	"\n"
	"#=============================================================================\n"
	"# Copyright 2003-2009 Kitware, Inc.\n"
	"#\n"
	"# CMake - Cross Platform Makefile Generator\n"
	"# Copyright 2000-2014 Kitware, Inc.\n"
	"# Copyright 2000-2011 Insight Software Consortium\n"
	"# All rights reserved.\n"
	"#\n"
	"# Redistribution and use in source and binary forms, with or without\n"
	"# modification, are permitted provided that the following conditions\n"
	"# are met:\n"
	"#\n"
	"# * Redistributions of source code must retain the above copyright\n"
	"# notice, this list of conditions and the following disclaimer.\n"
	"#\n"
	"# * Redistributions in binary form must reproduce the above copyright\n"
	"# notice, this list of conditions and the following disclaimer in the\n"
	"# documentation and/or other materials provided with the distribution.\n"
	"#\n"
	"# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n"
	"# nor the names of their contributors may be used to endorse or promote\n"
	"# products derived from this software without specific prior written\n"
	"# permission.\n"
	"#\n"
	"# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n"
	"# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n"
	"# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n"
	"# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n"
	"# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n"
	"# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n"
	"# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n"
	"# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n"
	"# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n"
	"# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n"
	"# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
	"#\n"
	"# This software is distributed WITHOUT ANY WARRANTY; without even the\n"
	"# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n"
	"# See the License for more information.\n"
	"#=============================================================================\n"
	"# (To distribute this file outside of CMake, substitute the full\n"
	"# License text for the above reference.)\n"
	"\n"
	"FIND_PATH(SDL2_IMAGE_INCLUDE_DIR SDL_image.h\n"
	"\tHINTS\n"
	"\t${SDL2}\n"
	"\t$ENV{SDL2}\n"
	"\t$ENV{SDL2_IMAGE}\n"
	"\tPATH_SUFFIXES include/SDL2 include SDL2\n"
	"\ti686-w64-mingw32/include/SDL2\n"
	"\tx86_64-w64-mingw32/include/SDL2\n"
	"\tPATHS\n"
	"\t~/Library/Frameworks\n"
	"\t/Library/Frameworks\n"
	"\t/usr/local/include/SDL2\n"
	"\t/usr/include/SDL2\n"
	"\t/sw # Fink\n"
	"\t/opt/local # DarwinPorts\n"
	"\t/opt/csw # Blastwave\n"
	"\t/opt\n"
	")\n"
	"\n"
	"# Lookup the 64 bit libs on x64\n"
	"IF(CMAKE_SIZEOF_VOID_P EQUAL 8)\n"
	"\tFIND_LIBRARY(SDL2_IMAGE_LIBRARY_TEMP\n"
	"\t\tNAMES SDL2_image\n"
	"\t\tHINTS\n"
	"\t\t${SDL2}\n"
	"\t\t$ENV{SDL2}\n"
	"\t\t$ENV{SDL2_IMAGE}\n"
	"\t\tPATH_SUFFIXES lib64 lib\n"
	"\t\tlib/x64\n"
	"\t\tx86_64-w64-mingw32/lib\n"
	"\t\tPATHS\n"
	"\t\t/sw\n"
	"\t\t/opt/local\n"
	"\t\t/opt/csw\n"
	"\t\t/opt\n"
	"\t)\n"
	"# On 32bit build find the 32bit libs\n"
	"ELSE(CMAKE_SIZEOF_VOID_P EQUAL 8)\n"
	"\tFIND_LIBRARY(SDL2_IMAGE_LIBRARY_TEMP\n"
	"\t\tNAMES SDL2_image\n"
	"\t\tHINTS\n"
	"\t\t${SDL2}\n"
	"\t\t$ENV{SDL2}\n"
	"\t\t$ENV{SDL2_IMAGE}\n"
	"\t\tPATH_SUFFIXES lib\n"
	"\t\tlib/x86\n"
	"\t\ti686-w64-mingw32/lib\n"
	"\t\tPATHS\n"
	"\t\t/sw\n"
	"\t\t/opt/local\n"
	"\t\t/opt/csw\n"
	"\t\t/opt\n"
	"\t)\n"
	"ENDIF(CMAKE_SIZEOF_VOID_P EQUAL 8)\n"
	"\n"
	"SET(SDL2_IMAGE_FOUND \"NO\")\n"
	"\tIF(SDL2_IMAGE_LIBRARY_TEMP)\n"
	"\t# Set the final string here so the GUI reflects the final state.\n"
	"\tSET(SDL2_IMAGE_LIBRARY ${SDL2_IMAGE_LIBRARY_TEMP} CACHE STRING \"Where the SDL2_image Library can be found\")\n"
	"\t# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n"
	"\tSET(SDL2_IMAGE_LIBRARY_TEMP \"${SDL2_IMAGE_LIBRARY_TEMP}\" CACHE INTERNAL \"\")\n"
	"\tSET(SDL2_IMAGE_FOUND \"YES\")\n"
	"ENDIF(SDL2_IMAGE_LIBRARY_TEMP)\n"
	"\n"
	"INCLUDE(FindPackageHandleStandardArgs)\n"
	"\n"
	"FIND_PACKAGE_HANDLE_STANDARD_ARGS(SDL2_IMAGE REQUIRED_VARS SDL2_IMAGE_LIBRARY SDL2_IMAGE_INCLUDE_DIR)";

#endif //PROJECTCREATOR_FINDSDL2_IMAGE_HPP
